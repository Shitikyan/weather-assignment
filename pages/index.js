import axios from 'axios'
import Head from 'next/head'
import Image from 'next/image'
import React, { useState, useEffect } from 'react'
import styles from '../styles/Home.module.css'
import BarChartLayout from './barchart'
import LineChartLayout from './linechart'
import AreaChartLayout from './areachart'

import { ProSidebarProvider } from 'react-pro-sidebar';
import { Sidebar, Menu, MenuItem, SubMenu } from 'react-pro-sidebar';
import Button from '@mui/material/Button';

const APP_ID = "84570c404a48399912145fb74a27ec05"

export default function Home() {
  const [cities, loadCities] = useState('')
  const [data, setData] = useState([]);
  const [state, setState] = useState(0);
  const [keyword, setCityKeyword] = useState('');
  const [sampleData, setSample] = useState(15);

  const getCities = async () => {
    const res = await axios.get("https://countriesnow.space/api/v0.1/countries/capital");
    loadCities(res.data.data.map(country => country.capital).filter(city => city != ""));
  };

  const getWeather = (capital) => {
    axios
      .get("https://api.openweathermap.org/geo/1.0/direct", {
        params: {
          q: capital,
          appid: APP_ID
        }
      }).then((response) => {
        axios.get("https://api.openweathermap.org/data/2.5/forecast", {
          params: {
            lat: response.data[0].lat,
            lon: response.data[0].lon,
            appid: APP_ID
          }
        }).then((res) => {
          console.log(res.data)
          setData(res.data.list);
        })
      })
  }

  useEffect(() => {
    getCities();
    return () => { };
  }, []);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>

        <div className={styles.maindiv}>

          <div className={styles.navbar}>
            
            <input type="text" onChange={(e) => setCityKeyword(e.target.value)} className={styles.search}/>

            <ProSidebarProvider>
              <Sidebar className={styles.sidebar}>
                <Menu>
                  {Array(cities.length).fill(true).map((_, i) => <MenuItem key={i} onClick={() => getWeather(cities[i])}>{cities[i]}</MenuItem>).filter(city => city.props.children.toLowerCase().includes(keyword) ? city : '')}
                </Menu>
              </Sidebar>
            </ProSidebarProvider>
          </div>

          <div className={styles.chart}>
            <div className={styles.chartSelector}>
              <Button variant="contained" className={styles.button} onClick={() => { setState(0) }}>
                All Chart
              </Button>
              <Button variant="contained" className={styles.button} onClick={() => { setState(1) }}>
                Area Chart
              </Button>
              <Button variant="contained" className={styles.button} onClick={() => { setState(2) }}>
                Bar Chart
              </Button>
              <Button variant="contained" className={styles.button} onClick={() => { setState(3) }}>
                Line Chart
              </Button>
            </div>

            <div className={styles.chartArea} >
              {(state == 0 || state == 1) && <AreaChartLayout list={data} />}
              {(state == 0 || state == 2) && <BarChartLayout list={data} />}
              {(state == 0 || state == 3) && <LineChartLayout list={data} />}
            </div>
          </div>

        </div>

      </main>
    </div>
  )
}
